import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Load dataset
data = pd.read_csv('Sleep_health_and_lifestyle_dataset.csv')

# Step 2: Print dataset columns and basic info
print(data.columns)
print(data.info())
print(data.describe())

# Step 3: Define features and target variable
# Selecting multiple input features for prediction
X = data[['Sleep Duration', 'Physical Activity Level', 'Stress Level', 'Age', 'Heart Rate']]  # Add other relevant features if needed
y = data['Quality of Sleep']  # Output variable

# Step 4: Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=1)

# Step 5: Initialize and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Make predictions
y_pred = model.predict(X_test)

# Step 7: Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error: {mse:.2f}')
print(f'R^2 Score: {r2:.2f}')

# Step 8: Visualize the results
plt.figure(figsize=(10, 6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel('Actual Quality of Sleep')
plt.ylabel('Predicted Quality of Sleep')
plt.title('Actual vs Predicted Quality of Sleep')
plt.plot([y.min(), y.max()], [y.min(), y.max()], '--r')  # Diagonal line for reference
plt.grid(True)
plt.show()
